#usda 1.0
(
    defaultPrim = "Root"
)

def Xform "Root" (
    active = true
)
{
    reorder nameChildren = ["Box", "MaplePlywood", "AnchorPortal1", "AnchorPortal2", "AnchorPortal3", "AnchorPortal4"]
    def Xform "Box" (
        active = true
    )
    {
        reorder nameChildren = ["AnchorPortal1", "AnchorPortal2", "AnchorPortal3", "AnchorPortal4", "Cube", "Cube_1", "Cube_2", "Cube_3", "Base", "Top"]
        def Cube "Cube" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MaplePlywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (4.8, 100, 4.8)
            float3 xformOp:translate = (-50, 0, -50)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Box/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Cube_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MaplePlywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (4.8, 100, 4.8)
            float3 xformOp:translate = (50, 0, 50)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Box/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Cube_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MaplePlywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (4.8, 100, 4.8)
            float3 xformOp:translate = (-50, 0, 50)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Box/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Cube_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MaplePlywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (52.36331, 491.47977)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (4.8, 100, 4.8)
            float3 xformOp:translate = (50, 0, -50)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Box/Cube_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Base" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MaplePlywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (72.36331, 511.47977)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (104.99997, 4.999999, 104.99997)
            float3 xformOp:translate = (0, -50, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Box/Base/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Top" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MaplePlywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (92.36331, 531.47974)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (104.99997, 4.999999, 104.99997)
            float3 xformOp:translate = (0, 50, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Box/Top/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Xform "AnchorPortal1" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (100, 100, 100)
            float3 xformOp:translate = (0, 0, 50)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "AnchorPortal2" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (100, 100, 100)
            float3 xformOp:translate = (0, 0, -50)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "AnchorPortal3" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (52.36331, 491.47977)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (100, 100, 100)
            float3 xformOp:translate = (-50, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "AnchorPortal4" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (72.36331, 511.47977)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (100, 100, 100)
            float3 xformOp:translate = (50, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def "MaplePlywood" (
        active = true
        references = @MaplePlywood.usdz@
    )
    {
        color3f inputs:Basecolor_Tint = (0.7594891, 0.6048688, 0.3967261) (
            colorSpace = "srgb_texture"
        )
    }
}

